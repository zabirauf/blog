name: Main - Deploy slider server when notebooks change
on:
    push:
        branches:
            - main
        paths-ignore:
            - "website/**"
    workflow_dispatch:

jobs:
    push-to-main-slider-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout main source
              uses: actions/checkout@v2

            - name: Push to main-slider-deploy
              uses: JamesIves/github-pages-deploy-action@releases/v3
              with:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  BRANCH: main-slider-deploy
                  FOLDER: .

    build:
        needs: push-to-main-slider-deploy
        runs-on: ubuntu-latest
        outputs:
          docker_image: registry.digitalocean.com/personal-apps-registry/pluto-slider-server:v1
        steps:
          - name: Check Out main-slider-deploy branch
            uses: actions/checkout@v2
            with:
              ref: main-slider-deploy
          - name: Install DigitalOcean Controller
            uses: digitalocean/action-doctl@v2
            with:
              token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          - name: Set up Docker Builder
            uses: docker/setup-buildx-action@v1
            with:
              driver: docker
          - name: Authenticate with DigitalOcean Container Registry
            run: doctl registry login --expiry-seconds 300 --verbose
          - name: Build and Push to DigitalOcean Container Registry
            uses: docker/build-push-action@v2
            with:
              context: .
              push: true
              tags: |
                registry.digitalocean.com/personal-apps-registry/pluto-slider-server:v1

    deploy-server:
        needs: build
        runs-on: ubuntu-latest
        steps:
        # Droplets already have docker, doctl + auth, and curl installed
        - name: Deploy Pluto slider server to DigitalOcean Droplet
          uses: appleboy/ssh-action@v0.1.4
          with:
              host: ${{ secrets.DO_SERVER_HOST }}
              username: root
              key: ${{ secrets.DO_API_KEY }}
              port: 22
              script: |
                [ ! "($docker ps -a | grep ${{needs.build.outputs.docker_image}})" ] && \
                doctl registry login --expiry-seconds 180 && \
                docker pull ${{needs.build.outputs.docker_image}} && \
                
                (docker stop pluto-slider-server || true) && \
                (docker rm pluto-slider-server || true) && \
                \
                echo "starting server instance..." && \
                docker run -d \
                --restart always \
                -p 0.0.0.0:1234:1234 \
                --name pluto-slider-server \
                ${{needs.build.outputs.docker_image}}